# Ditch sudo and use containers.
# @link http://docs.travis-ci.com/user/migrating-from-legacy/#Why-migrate-to-container-based-infrastructure%3F
# @link http://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure
sudo: false
language: php

notifications:
  email:
    on_success: never
    on_failure: change
  slack:
    secure: a6c/MoNQzAJV92EDvpZgrH9f3uwJ7ap7CbPQyx7E02viQWnbtuU25KdGXywV0ABKD/NhUCN/J9Hv8EXZThErgoIEtkIuedbD0+/iy2LrUipyuVjwVF8EuyarxdHQXDpMMUhQ6V5vcFZ4eK6qPQ9DzzdNmS267MGQv4N0/JUDFZ0=

cache:
  directories:
  - vendor
  - node_modules
  - "$HOME/.composer/cache"

matrix:
  include:
    # Run trunk in nightly and PHP 7.2
    - php: nightly
      env: WP_VERSION=trunk
    - php: 7.2
      env: WP_VERSION=trunk
    - php: 7.1
      env: WP_VERSION=latest
    - php: 5.6
      env: WP_VERSION=latest WP_MULTISITE=1 # For PHP 5.6 also run Multisite
    - php: 5.3
      env: WP_VERSION=latest
      dist: precise
  allow_failures:
    - php: nightly
  fast_finish: true

install:
  - |
    if [[ ${TRAVIS_PHP_VERSION:0:2} == "5." ]]; then
      bash bin/install-wp-test-tools.sh
      composer global require codedungeon/phpunit-result-printer
    else
      # Run composer install only for PHP 7.1 or above. The dependencies are not compatible with PHP 5.x
      composer install
    fi
  - |
    if [[ $TRAVIS_PHP_VERSION == 7.1 ]]; then
      # Run npm install only for PHP 7.1 since we are going to test grunt and other npm related things only in PHP 7.1
      npm install
    fi

before_script:
  - phpenv config-rm xdebug.ini
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
      composer global require "phpunit/phpunit=4.8.*|5.7.*"
    fi

script:
  - |
    if [[ $TRAVIS_PHP_VERSION == 7.1 ]]; then
      # Validate composer.json file
      composer validate --no-check-all --strict

      # Validate that grunt works
      grunt vendor
      grunt

      # Check php syntax
      npm run phpcs
    fi

    if [[ $TRAVIS_PHP_VERSION == 7.2 ]]; then
      # Run code coverage for PHP 7.2 alone
      npm run test:php:coverage:cover
    else
      if [[ ! -z "$WP_MULTISITE" ]] ; then
        WP_MULTISITE=1 phpunit
      else
        phpunit
      fi
    fi

after_script:
  - |
    if [[ $TRAVIS_PHP_VERSION == 7.2 ]]; then
      wget https://scrutinizer-ci.com/ocular.phar
      php ocular.phar code-coverage:upload --format=php-clover code-coverage/bulk-delete.clover
    fi
